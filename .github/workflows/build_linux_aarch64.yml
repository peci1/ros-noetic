jobs:
  stage_0_job_0:
    name: rosserial-python twist-mux
    runs-on: cirun-linux-aarch64--${{ github.run_id }}
    strategy:
      fail-fast: false
    needs: []
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-rosserial-python ros-noetic-twist-mux
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-rosserial-python ros-noetic-twist-mux
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_0_job_1:
    name: rosserial-server mbf-costmap-core
    runs-on: cirun-linux-aarch64--${{ github.run_id }}
    strategy:
      fail-fast: false
    needs: []
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-rosserial-server ros-noetic-mbf-costmap-core
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-rosserial-server ros-noetic-mbf-costmap-core
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_0_job_2:
    name: pilz-industrial-motion-planner turtlebot3-fake
    runs-on: cirun-linux-aarch64--${{ github.run_id }}
    strategy:
      fail-fast: false
    needs: []
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-pilz-industrial-motion-planner ros-noetic-turtlebot3-fake
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-pilz-industrial-motion-planner ros-noetic-turtlebot3-fake
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_0_job_3:
    name: jackal-gazebo ros-numpy
    runs-on: cirun-linux-aarch64--${{ github.run_id }}
    strategy:
      fail-fast: false
    needs: []
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-jackal-gazebo ros-noetic-ros-numpy
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-jackal-gazebo ros-noetic-ros-numpy
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_0_job_4:
    name: nmea-navsat-driver
    runs-on: cirun-linux-aarch64--${{ github.run_id }}
    strategy:
      fail-fast: false
    needs: []
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-nmea-navsat-driver
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-nmea-navsat-driver
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_1_job_5:
    name: turtlebot3-bringup teb-local-planner
    runs-on: cirun-linux-aarch64--${{ github.run_id }}
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    - stage_0_job_1
    - stage_0_job_2
    - stage_0_job_3
    - stage_0_job_4
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-turtlebot3-bringup ros-noetic-teb-local-planner
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-turtlebot3-bringup ros-noetic-teb-local-planner
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_1_job_6:
    name: moveit-planners jackal-simulator
    runs-on: cirun-linux-aarch64--${{ github.run_id }}
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    - stage_0_job_1
    - stage_0_job_2
    - stage_0_job_3
    - stage_0_job_4
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-moveit-planners ros-noetic-jackal-simulator
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-moveit-planners ros-noetic-jackal-simulator
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_2_job_7:
    name: turtlebot3-slam turtlebot3-navigation
    runs-on: cirun-linux-aarch64--${{ github.run_id }}
    strategy:
      fail-fast: false
    needs:
    - stage_1_job_5
    - stage_1_job_6
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-turtlebot3-slam ros-noetic-turtlebot3-navigation
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-turtlebot3-slam ros-noetic-turtlebot3-navigation
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_2_job_8:
    name: turtlebot3-example moveit
    runs-on: cirun-linux-aarch64--${{ github.run_id }}
    strategy:
      fail-fast: false
    needs:
    - stage_1_job_5
    - stage_1_job_6
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-turtlebot3-example ros-noetic-moveit
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-turtlebot3-example ros-noetic-moveit
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_3_job_9:
    name: turtlebot3
    runs-on: cirun-linux-aarch64--${{ github.run_id }}
    strategy:
      fail-fast: false
    needs:
    - stage_2_job_7
    - stage_2_job_8
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-turtlebot3
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-turtlebot3
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
name: build_linux
on:
  push:
    branches:
    - buildbranch_linux_aarch64
